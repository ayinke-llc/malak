{
	"components": {
		"schemas": {
			"malak.Block": {
				"properties": {
					"children": {
						"items": {
							"$ref": "#/components/schemas/malak.Block"
						},
						"type": "array"
					},
					"content": {},
					"id": {
						"type": "string"
					},
					"props": {
						"additionalProperties": true,
						"type": "object"
					},
					"type": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.Contact": {
				"properties": {
					"city": {
						"type": "string"
					},
					"company": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"created_by": {
						"description": "User who added/created this contact",
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"first_name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					},
					"lists": {
						"items": {
							"$ref": "#/components/schemas/malak.ContactListMapping"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/components/schemas/malak.CustomContactMetadata"
					},
					"notes": {
						"type": "string"
					},
					"owner_id": {
						"description": "User who owns the contact.\nDoes not mean who added the contact but who chases\nor follows up officially with the contact",
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"reference": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"workspace_id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.ContactList": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"created_by": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"reference": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"workspace_id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.ContactListMapping": {
				"properties": {
					"contact_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"created_by": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"list": {
						"$ref": "#/components/schemas/malak.ContactList"
					},
					"list_id": {
						"type": "string"
					},
					"reference": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.ContactListMappingWithContact": {
				"properties": {
					"contact_id": {
						"type": "string"
					},
					"email": {
						"description": "Contact fields",
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"list_id": {
						"type": "string"
					},
					"reference": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.ContactShareItem": {
				"properties": {
					"contact_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"item_id": {
						"type": "string"
					},
					"item_reference": {
						"type": "string"
					},
					"item_type": {
						"$ref": "#/components/schemas/malak.ContactShareItemType"
					},
					"reference": {
						"type": "string"
					},
					"shared_at": {
						"type": "string"
					},
					"shared_by": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.ContactShareItemType": {
				"enum": [
					"update",
					"dashboard",
					"deck"
				],
				"type": "string",
				"x-enum-varnames": [
					"ContactShareItemTypeUpdate",
					"ContactShareItemTypeDashboard",
					"ContactShareItemTypeDeck"
				]
			},
			"malak.CustomContactMetadata": {
				"additionalProperties": {
					"type": "string"
				},
				"type": "object"
			},
			"malak.Deck": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"created_by": {
						"type": "string"
					},
					"deck_size": {
						"type": "integer"
					},
					"id": {
						"type": "string"
					},
					"is_archived": {
						"type": "boolean"
					},
					"is_pinned": {
						"type": "boolean"
					},
					"object_key": {
						"type": "string"
					},
					"preferences": {
						"$ref": "#/components/schemas/malak.DeckPreference"
					},
					"reference": {
						"type": "string"
					},
					"short_link": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"workspace_id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.DeckPreference": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"created_by": {
						"type": "string"
					},
					"deck_id": {
						"type": "string"
					},
					"enable_downloading": {
						"type": "boolean"
					},
					"expires_at": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"password": {
						"$ref": "#/components/schemas/malak.PasswordDeckPreferences"
					},
					"reference": {
						"type": "string"
					},
					"require_email": {
						"type": "boolean"
					},
					"updated_at": {
						"type": "string"
					},
					"workspace_id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.PasswordDeckPreferences": {
				"properties": {
					"enabled": {
						"type": "boolean"
					},
					"password": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.PlanMetadata": {
				"properties": {
					"deck": {
						"properties": {
							"count": {
								"type": "integer"
							}
						},
						"type": "object"
					},
					"team": {
						"properties": {
							"enabled": {
								"type": "boolean"
							},
							"size": {
								"type": "integer"
							}
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"malak.RecipientStatus": {
				"enum": [
					"pending",
					"sent",
					"failed"
				],
				"type": "string",
				"x-enum-varnames": [
					"RecipientStatusPending",
					"RecipientStatusSent",
					"RecipientStatusFailed"
				]
			},
			"malak.Role": {
				"enum": [
					"admin",
					"member",
					"billing",
					"investor",
					"guest"
				],
				"type": "string",
				"x-enum-varnames": [
					"RoleAdmin",
					"RoleMember",
					"RoleBilling",
					"RoleInvestor",
					"RoleGuest"
				]
			},
			"malak.Update": {
				"properties": {
					"content": {
						"items": {
							"$ref": "#/components/schemas/malak.Block"
						},
						"type": "array"
					},
					"created_at": {
						"type": "string"
					},
					"created_by": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"is_pinned": {
						"description": "If this update is pinned",
						"type": "boolean"
					},
					"metadata": {
						"$ref": "#/components/schemas/malak.UpdateMetadata"
					},
					"reference": {
						"type": "string"
					},
					"sent_at": {
						"type": "string"
					},
					"sent_by": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/malak.UpdateStatus"
					},
					"title": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"workspace_id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.UpdateMetadata": {
				"type": "object"
			},
			"malak.UpdateRecipient": {
				"properties": {
					"contact": {
						"$ref": "#/components/schemas/malak.Contact"
					},
					"contact_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"reference": {
						"type": "string"
					},
					"schedule_id": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/malak.RecipientStatus"
					},
					"update_id": {
						"type": "string"
					},
					"update_recipient_stat": {
						"$ref": "#/components/schemas/malak.UpdateRecipientStat"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.UpdateRecipientStat": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"has_reaction": {
						"type": "boolean"
					},
					"id": {
						"type": "string"
					},
					"is_bounced": {
						"type": "boolean"
					},
					"is_delivered": {
						"type": "boolean"
					},
					"last_opened_at": {
						"type": "string"
					},
					"recipient": {
						"$ref": "#/components/schemas/malak.UpdateRecipient"
					},
					"recipient_id": {
						"type": "string"
					},
					"reference": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.UpdateStat": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"reference": {
						"type": "string"
					},
					"total_clicks": {
						"type": "integer"
					},
					"total_opens": {
						"type": "integer"
					},
					"total_reactions": {
						"type": "integer"
					},
					"total_sent": {
						"type": "integer"
					},
					"unique_opens": {
						"type": "integer"
					},
					"update_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.UpdateStatus": {
				"enum": [
					"draft",
					"sent"
				],
				"type": "string",
				"x-enum-varnames": [
					"UpdateStatusDraft",
					"UpdateStatusSent"
				]
			},
			"malak.User": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"full_name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/malak.UserMetadata"
					},
					"roles": {
						"items": {
							"$ref": "#/components/schemas/malak.UserRole"
						},
						"type": "array"
					},
					"updated_at": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.UserMetadata": {
				"properties": {
					"current_workspace": {
						"description": "Used to keep track of the last used workspace\nIn the instance of multiple workspaces\nSo when next the user logs in, we remember and take them to the\nright place rather than always a list of all their workspaces and they\nhave to select one",
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.UserRole": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/malak.Role"
					},
					"updated_at": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"workspace_id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"malak.Workspace": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"logo_url": {
						"type": "string"
					},
					"metadata": {
						"$ref": "#/components/schemas/malak.PlanMetadata"
					},
					"plan_id": {
						"type": "string"
					},
					"reference": {
						"type": "string"
					},
					"stripe_customer_id": {
						"description": "Not required\nDummy values work really if not using stripe",
						"type": "string"
					},
					"subscription_id": {
						"type": "string"
					},
					"timezone": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"website": {
						"type": "string"
					},
					"workspace_name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"server.APIStatus": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"server.addContactToListRequest": {
				"properties": {
					"reference": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"server.authenticateUserRequest": {
				"properties": {
					"code": {
						"type": "string"
					}
				},
				"required": [
					"code"
				],
				"type": "object"
			},
			"server.contentUpdateRequest": {
				"properties": {
					"title": {
						"type": "string"
					},
					"update": {
						"items": {
							"$ref": "#/components/schemas/malak.Block"
						},
						"type": "array"
					}
				},
				"required": [
					"title",
					"update"
				],
				"type": "object"
			},
			"server.createContactListRequest": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object"
			},
			"server.createContactRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"server.createDeckRequest": {
				"properties": {
					"deck_url": {
						"type": "string"
					},
					"title": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"server.createUpdateContent": {
				"properties": {
					"title": {
						"type": "string"
					}
				},
				"required": [
					"title"
				],
				"type": "object"
			},
			"server.createWorkspaceRequest": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"server.createdUpdateResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"update": {
						"$ref": "#/components/schemas/malak.Update"
					}
				},
				"required": [
					"message",
					"update"
				],
				"type": "object"
			},
			"server.createdUserResponse": {
				"properties": {
					"current_workspace": {
						"$ref": "#/components/schemas/malak.Workspace"
					},
					"message": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/malak.User"
					},
					"workspaces": {
						"items": {
							"$ref": "#/components/schemas/malak.Workspace"
						},
						"type": "array"
					}
				},
				"required": [
					"message",
					"token",
					"user",
					"workspaces"
				],
				"type": "object"
			},
			"server.fetchContactListResponse": {
				"properties": {
					"list": {
						"$ref": "#/components/schemas/malak.ContactList"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"server.fetchContactListsResponse": {
				"properties": {
					"lists": {
						"items": {
							"properties": {
								"list": {
									"$ref": "#/components/schemas/malak.ContactList"
								},
								"mappings": {
									"items": {
										"$ref": "#/components/schemas/malak.ContactListMappingWithContact"
									},
									"type": "array"
								}
							},
							"required": [
								"list",
								"mappings"
							],
							"type": "object"
						},
						"type": "array"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"lists",
					"message"
				],
				"type": "object"
			},
			"server.fetchContactResponse": {
				"properties": {
					"contact": {
						"$ref": "#/components/schemas/malak.Contact"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"contact",
					"message"
				],
				"type": "object"
			},
			"server.fetchDeckResponse": {
				"properties": {
					"deck": {
						"$ref": "#/components/schemas/malak.Deck"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"server.fetchDecksResponse": {
				"properties": {
					"decks": {
						"items": {
							"$ref": "#/components/schemas/malak.Deck"
						},
						"type": "array"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"server.fetchDetailedContactResponse": {
				"properties": {
					"contact": {
						"$ref": "#/components/schemas/malak.Contact"
					},
					"message": {
						"type": "string"
					},
					"shared_items": {
						"items": {
							"$ref": "#/components/schemas/malak.ContactShareItem"
						},
						"type": "array"
					}
				},
				"required": [
					"contact",
					"message",
					"shared_items"
				],
				"type": "object"
			},
			"server.fetchUpdateAnalyticsResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"recipients": {
						"items": {
							"$ref": "#/components/schemas/malak.UpdateRecipient"
						},
						"type": "array"
					},
					"update": {
						"$ref": "#/components/schemas/malak.UpdateStat"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"server.fetchUpdateReponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"update": {
						"$ref": "#/components/schemas/malak.Update"
					}
				},
				"required": [
					"message",
					"update"
				],
				"type": "object"
			},
			"server.fetchWorkspaceResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"workspace": {
						"$ref": "#/components/schemas/malak.Workspace"
					}
				},
				"required": [
					"message",
					"workspace"
				],
				"type": "object"
			},
			"server.listContactsResponse": {
				"properties": {
					"contacts": {
						"items": {
							"$ref": "#/components/schemas/malak.Contact"
						},
						"type": "array"
					},
					"message": {
						"type": "string"
					},
					"meta": {
						"$ref": "#/components/schemas/server.meta"
					}
				},
				"required": [
					"contacts",
					"message",
					"meta"
				],
				"type": "object"
			},
			"server.listUpdateResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"meta": {
						"$ref": "#/components/schemas/server.meta"
					},
					"updates": {
						"items": {
							"$ref": "#/components/schemas/malak.Update"
						},
						"type": "array"
					}
				},
				"required": [
					"message",
					"meta",
					"updates"
				],
				"type": "object"
			},
			"server.meta": {
				"properties": {
					"paging": {
						"$ref": "#/components/schemas/server.pagingInfo"
					}
				},
				"required": [
					"paging"
				],
				"type": "object"
			},
			"server.pagingInfo": {
				"properties": {
					"page": {
						"type": "integer"
					},
					"per_page": {
						"type": "integer"
					},
					"total": {
						"type": "integer"
					}
				},
				"required": [
					"page",
					"per_page",
					"total"
				],
				"type": "object"
			},
			"server.previewUpdateRequest": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object"
			},
			"server.sendUpdateRequest": {
				"properties": {
					"emails": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"send_at": {
						"type": "integer"
					}
				},
				"type": "object"
			},
			"server.updateDeckPreferencesRequest": {
				"properties": {
					"enable_downloading": {
						"type": "boolean"
					},
					"password_protection": {
						"properties": {
							"enabled": {
								"type": "boolean"
							},
							"value": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"require_email": {
						"type": "boolean"
					}
				},
				"type": "object"
			},
			"server.updateWorkspaceRequest": {
				"properties": {
					"logo": {
						"type": "string"
					},
					"timezone": {
						"type": "string"
					},
					"website": {
						"type": "string"
					},
					"workspace_name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"server.uploadImageResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"url"
				],
				"type": "object"
			}
		},
		"securitySchemes": {
			"ApiKeyAuth": {
				"in": "header",
				"name": "Authorization",
				"type": "apiKey"
			}
		}
	},
	"info": {
		"contact": {
			"email": "lanre@ayinke.ventures",
			"name": "Ayinke Ventures"
		},
		"title": "Malak's API documentation",
		"version": "0.1.0"
	},
	"openapi": "3.0.3",
	"paths": {
		"/auth/connect/{provider}": {
			"post": {
				"parameters": [
					{
						"description": "oauth2 provider",
						"in": "path",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.authenticateUserRequest"
							}
						}
					},
					"description": "auth exchange data",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.createdUserResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Sign in with a social login provider",
				"tags": [
					"auth"
				]
			}
		},
		"/contacts": {
			"get": {
				"parameters": [
					{
						"description": "Page to query data from. Defaults to 1",
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Number to items to return. Defaults to 10 items",
						"in": "query",
						"name": "per_page",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.listContactsResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "list your contacts",
				"tags": [
					"contacts"
				]
			},
			"post": {
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.createContactRequest"
							}
						}
					},
					"description": "contact request body",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchContactResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Creates a new contact",
				"tags": [
					"contacts"
				]
			}
		},
		"/contacts/lists": {
			"get": {
				"operationId": "fetchContactLists",
				"parameters": [
					{
						"description": "show emails inside the list",
						"in": "query",
						"name": "include_emails",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchContactListsResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "List all created contact lists",
				"tags": [
					"contacts"
				]
			},
			"post": {
				"operationId": "createContactList",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.createContactListRequest"
							}
						}
					},
					"description": "contact list body",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchContactListResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Create a new contact list",
				"tags": [
					"contacts"
				]
			}
		},
		"/contacts/lists/{reference}": {
			"delete": {
				"operationId": "addEmailToContactList",
				"parameters": [
					{
						"description": "list unique reference.. e.g list_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.addContactToListRequest"
							}
						}
					},
					"description": "contact body",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "add a new contact to a list",
				"tags": [
					"contacts"
				]
			},
			"put": {
				"operationId": "editContactList",
				"parameters": [
					{
						"description": "list unique reference.. e.g list_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.createContactListRequest"
							}
						}
					},
					"description": "contact list body",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchContactListResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Edit a contact list",
				"tags": [
					"contacts"
				]
			}
		},
		"/contacts/{reference}": {
			"delete": {
				"operationId": "deleteContact",
				"parameters": [
					{
						"description": "contact unique reference.. e.g contact_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "delete a contact",
				"tags": [
					"contacts"
				]
			},
			"get": {
				"parameters": [
					{
						"description": "contact unique reference.. e.g contact_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchDetailedContactResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "fetch a contact by reference",
				"tags": [
					"contacts"
				]
			}
		},
		"/decks": {
			"get": {
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchDecksResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "list all decks. No pagination",
				"tags": [
					"decks"
				]
			},
			"post": {
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.createDeckRequest"
							}
						}
					},
					"description": "deck request body",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchDeckResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Creates a new deck",
				"tags": [
					"decks"
				]
			}
		},
		"/decks/{reference}": {
			"delete": {
				"parameters": [
					{
						"description": "deck unique reference.. e.g deck_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "delete a deck",
				"tags": [
					"decks"
				]
			},
			"get": {
				"parameters": [
					{
						"description": "deck unique reference.. e.g deck_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchDeckResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "fetch a deck",
				"tags": [
					"decks"
				]
			}
		},
		"/decks/{reference}/archive": {
			"post": {
				"operationId": "toggleArchive",
				"parameters": [
					{
						"description": "deck unique reference.. e.g deck_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchDeckResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "toggle archive status of a deck",
				"tags": [
					"decks"
				]
			}
		},
		"/decks/{reference}/pin": {
			"post": {
				"operationId": "togglePin",
				"parameters": [
					{
						"description": "deck unique reference.. e.g deck_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchDeckResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "toggle pinned status of a deck",
				"tags": [
					"decks"
				]
			}
		},
		"/decks/{reference}/preferences": {
			"put": {
				"parameters": [
					{
						"description": "deck unique reference.. e.g deck_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.updateDeckPreferencesRequest"
							}
						}
					},
					"description": "deck preferences request body",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchDeckResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "update a deck preferences",
				"tags": [
					"decks"
				]
			}
		},
		"/updates/react": {
			"get": {
				"operationId": "reactPost",
				"parameters": [
					{
						"description": "provider type",
						"in": "query",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "email id",
						"in": "query",
						"name": "email_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Fetch a specific update",
				"tags": [
					"updates"
				]
			}
		},
		"/uploads/decks": {
			"post": {
				"operationId": "uploadDeck",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"image_body": {
										"description": "image body",
										"format": "binary",
										"type": "string",
										"x-formData-name": "image_body"
									}
								},
								"required": [
									"image_body"
								],
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.uploadImageResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Upload a deck",
				"tags": [
					"decks"
				]
			}
		},
		"/uploads/images": {
			"post": {
				"operationId": "uploadImage",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"image_body": {
										"description": "image body",
										"format": "binary",
										"type": "string",
										"x-formData-name": "image_body"
									}
								},
								"required": [
									"image_body"
								],
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.uploadImageResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Upload an image",
				"tags": [
					"images"
				]
			}
		},
		"/user": {
			"get": {
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.createdUserResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Fetch current user. This api should also double as a token validation api",
				"tags": [
					"user"
				]
			}
		},
		"/workspaces": {
			"patch": {
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.updateWorkspaceRequest"
							}
						}
					},
					"description": "request body to create a workspace",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchWorkspaceResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "update workspace details",
				"tags": [
					"workspace"
				]
			},
			"post": {
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.createWorkspaceRequest"
							}
						}
					},
					"description": "request body to create a workspace",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchWorkspaceResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Create a new workspace",
				"tags": [
					"workspace"
				]
			}
		},
		"/workspaces/updates": {
			"get": {
				"parameters": [
					{
						"description": "Page to query data from. Defaults to 1",
						"in": "query",
						"name": "page",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "Number to items to return. Defaults to 10 items",
						"in": "query",
						"name": "per_page",
						"schema": {
							"type": "integer"
						}
					},
					{
						"description": "filter results by the status of the update.",
						"in": "query",
						"name": "status",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.listUpdateResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "List updates",
				"tags": [
					"updates"
				]
			},
			"post": {
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.createUpdateContent"
							}
						}
					},
					"description": "update content body",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.createdUpdateResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Create a new update",
				"tags": [
					"updates"
				]
			}
		},
		"/workspaces/updates/pins": {
			"get": {
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.listUpdateResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "List pinned updates",
				"tags": [
					"updates"
				]
			}
		},
		"/workspaces/updates/{reference}": {
			"delete": {
				"operationId": "deleteUpdate",
				"parameters": [
					{
						"description": "update unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Delete a specific update",
				"tags": [
					"updates"
				]
			},
			"get": {
				"operationId": "fetchUpdate",
				"parameters": [
					{
						"description": "update unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchUpdateReponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Fetch a specific update",
				"tags": [
					"updates"
				]
			},
			"post": {
				"operationId": "sendUpdate",
				"parameters": [
					{
						"description": "update unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.sendUpdateRequest"
							}
						}
					},
					"description": "request body to send an update",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Send an update to real users",
				"tags": [
					"updates"
				]
			},
			"put": {
				"operationId": "updateContent",
				"parameters": [
					{
						"description": "update unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.contentUpdateRequest"
							}
						}
					},
					"description": "update content body",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Update a specific update",
				"tags": [
					"updates"
				]
			}
		},
		"/workspaces/updates/{reference}/analytics": {
			"get": {
				"operationId": "fetchUpdateAnalytics",
				"parameters": [
					{
						"description": "update unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchUpdateAnalyticsResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Fetch analytics for a specific update",
				"tags": [
					"updates"
				]
			}
		},
		"/workspaces/updates/{reference}/duplicate": {
			"post": {
				"operationId": "duplicateUpdate",
				"parameters": [
					{
						"description": "update unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.createdUpdateResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Duplicate a specific update",
				"tags": [
					"updates"
				]
			}
		},
		"/workspaces/updates/{reference}/pin": {
			"post": {
				"operationId": "toggleUpdatePin",
				"parameters": [
					{
						"description": "update unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.createdUpdateResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Toggle pinned status a specific update",
				"tags": [
					"updates"
				]
			}
		},
		"/workspaces/updates/{reference}/preview": {
			"post": {
				"operationId": "previewUpdate",
				"parameters": [
					{
						"description": "update unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server.previewUpdateRequest"
							}
						}
					},
					"description": "request body to create a workspace",
					"required": true,
					"x-originalParamName": "message"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Send preview of an update",
				"tags": [
					"updates"
				]
			}
		},
		"/workspaces/{reference}": {
			"post": {
				"operationId": "switchworkspace",
				"parameters": [
					{
						"description": "Workspace unique reference.. e.g update_",
						"in": "path",
						"name": "reference",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.fetchWorkspaceResponse"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Bad Request"
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Unauthorized"
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Not Found"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/server.APIStatus"
								}
							}
						},
						"description": "Internal Server Error"
					}
				},
				"summary": "Switch current workspace",
				"tags": [
					"workspace"
				]
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:5300/v1"
		}
	]
}