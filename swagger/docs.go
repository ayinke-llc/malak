// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Ayinke Ventures",
            "email": "lanre@ayinke.ventures"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/connect/{provider}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in with a social login provider",
                "parameters": [
                    {
                        "description": "auth exchange data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.authenticateUserRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "oauth2 provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "list your contacts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to query data from. Defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number to items to return. Defaults to 10 items",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.listContactsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Creates a new contact",
                "parameters": [
                    {
                        "description": "contact request body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/contacts/lists": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "List all created contact lists",
                "operationId": "fetchContactLists",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "show emails inside the list",
                        "name": "include_emails",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchContactListsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Create a new contact list",
                "operationId": "createContactList",
                "parameters": [
                    {
                        "description": "contact list body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createContactListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchContactListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/contacts/lists/{reference}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Edit a contact list",
                "operationId": "editContactList",
                "parameters": [
                    {
                        "description": "contact list body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createContactListRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "list unique reference.. e.g list_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchContactListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "add a new contact to a list",
                "operationId": "addEmailToContactList",
                "parameters": [
                    {
                        "description": "contact body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.addContactToListRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "list unique reference.. e.g list_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "delete a contact list",
                "operationId": "deleteContactList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "list unique reference.. e.g list_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/contacts/{reference}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "fetch a contact by reference",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contact unique reference.. e.g contact_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchDetailedContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "edit a contact",
                "parameters": [
                    {
                        "description": "contact request body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.editContactRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "contact unique reference.. e.g contact_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "delete a contact",
                "operationId": "deleteContact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contact unique reference.. e.g contact_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/decks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "list all decks. No pagination",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchDecksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "Creates a new deck",
                "parameters": [
                    {
                        "description": "deck request body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createDeckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchDeckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/decks/{reference}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "fetch a deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "deck unique reference.. e.g deck_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchDeckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "delete a deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "deck unique reference.. e.g deck_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/decks/{reference}/archive": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "toggle archive status of a deck",
                "operationId": "toggleArchive",
                "parameters": [
                    {
                        "type": "string",
                        "description": "deck unique reference.. e.g deck_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchDeckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/decks/{reference}/pin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "toggle pinned status of a deck",
                "operationId": "togglePin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "deck unique reference.. e.g deck_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchDeckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/decks/{reference}/preferences": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "update a deck preferences",
                "parameters": [
                    {
                        "type": "string",
                        "description": "deck unique reference.. e.g deck_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "deck preferences request body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.updateDeckPreferencesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchDeckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/updates/react": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Fetch a specific update",
                "operationId": "reactPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "provider type",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email id",
                        "name": "email_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/uploads/decks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decks"
                ],
                "summary": "Upload a deck",
                "operationId": "uploadDeck",
                "parameters": [
                    {
                        "type": "file",
                        "description": "image body",
                        "name": "image_body",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.uploadImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/uploads/images": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload an image",
                "operationId": "uploadImage",
                "parameters": [
                    {
                        "type": "file",
                        "description": "image body",
                        "name": "image_body",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.uploadImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Fetch current user. This api should also double as a token validation api",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Create a new workspace",
                "parameters": [
                    {
                        "description": "request body to create a workspace",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchWorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "update workspace details",
                "parameters": [
                    {
                        "description": "request body to create a workspace",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.updateWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchWorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/billing": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "get billing portal",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchBillingPortalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/integrations": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "integrations"
                ],
                "summary": "fetch workspace preferences",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.listIntegrationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/integrations/{reference}/ping": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "integrations"
                ],
                "summary": "test an api key is valid and can reach the integration",
                "parameters": [
                    {
                        "description": "request body to test an integration",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.testAPIIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/preferences": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "fetch workspace preferences",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.preferenceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "update workspace preferences",
                "parameters": [
                    {
                        "description": "request body to updare a workspace preference",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.updatePreferencesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.preferenceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/switch/{reference}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Switch current workspace",
                "operationId": "switchworkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchWorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "List updates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to query data from. Defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number to items to return. Defaults to 10 items",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter results by the status of the update.",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.listUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Create a new update",
                "parameters": [
                    {
                        "description": "update content body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createUpdateContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/pins": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "List pinned updates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.listUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Fetch a specific update",
                "operationId": "fetchUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchUpdateReponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Update a specific update",
                "operationId": "updateContent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update content body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.contentUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Send an update to real users",
                "operationId": "sendUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body to send an update",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.sendUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Delete a specific update",
                "operationId": "deleteUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}/analytics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Fetch analytics for a specific update",
                "operationId": "fetchUpdateAnalytics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchUpdateAnalyticsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}/duplicate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Duplicate a specific update",
                "operationId": "duplicateUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}/pin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Toggle pinned status a specific update",
                "operationId": "toggleUpdatePin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}/preview": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Send preview of an update",
                "operationId": "previewUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body to create a workspace",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.previewUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "malak.BillingPreferences": {
            "type": "object",
            "properties": {
                "finance_email": {
                    "type": "string"
                }
            }
        },
        "malak.Block": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Block"
                    }
                },
                "content": {},
                "id": {
                    "type": "string"
                },
                "props": {
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "malak.CommunicationPreferences": {
            "type": "object",
            "properties": {
                "enable_marketing": {
                    "type": "boolean"
                },
                "enable_product_updates": {
                    "type": "boolean"
                }
            }
        },
        "malak.Contact": {
            "type": "object",
            "properties": {
                "city": {
                    "description": "Legacy lmao. should be address but migrations bit ugh :))",
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "description": "User who added/created this contact",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.ContactListMapping"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/malak.CustomContactMetadata"
                },
                "notes": {
                    "type": "string"
                },
                "owner_id": {
                    "description": "User who owns the contact.\nDoes not mean who added the contact but who chases\nor follows up officially with the contact",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.ContactList": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.ContactListMapping": {
            "type": "object",
            "properties": {
                "contact_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "list": {
                    "$ref": "#/definitions/malak.ContactList"
                },
                "list_id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.ContactListMappingWithContact": {
            "type": "object",
            "properties": {
                "contact_id": {
                    "type": "string"
                },
                "email": {
                    "description": "Contact fields",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "list_id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "malak.ContactShareItem": {
            "type": "object",
            "properties": {
                "contact_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "item_id": {
                    "type": "string"
                },
                "item_reference": {
                    "type": "string"
                },
                "item_type": {
                    "$ref": "#/definitions/malak.ContactShareItemType"
                },
                "reference": {
                    "type": "string"
                },
                "shared_at": {
                    "type": "string"
                },
                "shared_by": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.ContactShareItemType": {
            "type": "string",
            "enum": [
                "update",
                "dashboard",
                "deck"
            ],
            "x-enum-varnames": [
                "ContactShareItemTypeUpdate",
                "ContactShareItemTypeDashboard",
                "ContactShareItemTypeDeck"
            ]
        },
        "malak.CustomContactMetadata": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "malak.Deck": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "deck_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "is_pinned": {
                    "type": "boolean"
                },
                "object_key": {
                    "type": "string"
                },
                "preferences": {
                    "$ref": "#/definitions/malak.DeckPreference"
                },
                "reference": {
                    "type": "string"
                },
                "short_link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.DeckPreference": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "deck_id": {
                    "type": "string"
                },
                "enable_downloading": {
                    "type": "boolean"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "$ref": "#/definitions/malak.PasswordDeckPreferences"
                },
                "reference": {
                    "type": "string"
                },
                "require_email": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.Integration": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "integration_name": {
                    "type": "string"
                },
                "integration_type": {
                    "$ref": "#/definitions/malak.IntegrationType"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "logo_url": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.IntegrationMetadata"
                },
                "reference": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.IntegrationMetadata": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "malak.IntegrationType": {
            "type": "string",
            "enum": [
                "oauth2",
                "api_key"
            ],
            "x-enum-varnames": [
                "IntegrationTypeOauth2",
                "IntegrationTypeApiKey"
            ]
        },
        "malak.PasswordDeckPreferences": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "malak.Plan": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Defaults to zero",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "default_price_id": {
                    "description": "Stripe default price id. Again not needed if not using Stripe",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_default": {
                    "description": "IsDefault if this is the default plan for the user to get signed up to\non sign up\n\nBetter to keep this here than to use config",
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.PlanMetadata"
                },
                "plan_name": {
                    "type": "string"
                },
                "reference": {
                    "description": "Can use a fake id really\nAs this only matters if you turn on Stripe",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.PlanMetadata": {
            "type": "object",
            "properties": {
                "dashboard": {
                    "type": "object",
                    "properties": {
                        "embed_dashboard": {
                            "type": "boolean"
                        },
                        "share_dashboard_via_link": {
                            "type": "boolean"
                        }
                    }
                },
                "data_room": {
                    "type": "object",
                    "properties": {
                        "share_via_link": {
                            "type": "boolean"
                        },
                        "size": {
                            "type": "integer"
                        }
                    }
                },
                "deck": {
                    "type": "object",
                    "properties": {
                        "auto_terminate_link": {
                            "type": "boolean"
                        },
                        "custom_domain": {
                            "type": "boolean"
                        }
                    }
                },
                "integrations": {
                    "type": "object",
                    "properties": {
                        "available_for_use": {
                            "type": "integer"
                        }
                    }
                },
                "team": {
                    "type": "object",
                    "properties": {
                        "size": {
                            "type": "integer"
                        }
                    }
                },
                "updates": {
                    "type": "object",
                    "properties": {
                        "custom_domain": {
                            "type": "boolean"
                        },
                        "max_recipients": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "malak.Preference": {
            "type": "object",
            "properties": {
                "billing": {
                    "$ref": "#/definitions/malak.BillingPreferences"
                },
                "communication": {
                    "$ref": "#/definitions/malak.CommunicationPreferences"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.RecipientStatus": {
            "type": "string",
            "enum": [
                "pending",
                "sent",
                "failed"
            ],
            "x-enum-varnames": [
                "RecipientStatusPending",
                "RecipientStatusSent",
                "RecipientStatusFailed"
            ]
        },
        "malak.Role": {
            "type": "string",
            "enum": [
                "admin",
                "member",
                "billing",
                "investor",
                "guest"
            ],
            "x-enum-varnames": [
                "RoleAdmin",
                "RoleMember",
                "RoleBilling",
                "RoleInvestor",
                "RoleGuest"
            ]
        },
        "malak.Update": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Block"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_pinned": {
                    "description": "If this update is pinned",
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.UpdateMetadata"
                },
                "reference": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string"
                },
                "sent_by": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/malak.UpdateStatus"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.UpdateMetadata": {
            "type": "object"
        },
        "malak.UpdateRecipient": {
            "type": "object",
            "properties": {
                "contact": {
                    "$ref": "#/definitions/malak.Contact"
                },
                "contact_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/malak.RecipientStatus"
                },
                "update_id": {
                    "type": "string"
                },
                "update_recipient_stat": {
                    "$ref": "#/definitions/malak.UpdateRecipientStat"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.UpdateRecipientStat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "has_reaction": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_bounced": {
                    "type": "boolean"
                },
                "is_delivered": {
                    "type": "boolean"
                },
                "last_opened_at": {
                    "type": "string"
                },
                "recipient": {
                    "$ref": "#/definitions/malak.UpdateRecipient"
                },
                "recipient_id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.UpdateStat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "total_clicks": {
                    "type": "integer"
                },
                "total_opens": {
                    "type": "integer"
                },
                "total_reactions": {
                    "type": "integer"
                },
                "total_sent": {
                    "type": "integer"
                },
                "unique_opens": {
                    "type": "integer"
                },
                "update_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.UpdateStatus": {
            "type": "string",
            "enum": [
                "draft",
                "sent"
            ],
            "x-enum-varnames": [
                "UpdateStatusDraft",
                "UpdateStatusSent"
            ]
        },
        "malak.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.UserMetadata"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.UserRole"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.UserMetadata": {
            "type": "object",
            "properties": {
                "current_workspace": {
                    "description": "Used to keep track of the last used workspace\nIn the instance of multiple workspaces\nSo when next the user logs in, we remember and take them to the\nright place rather than always a list of all their workspaces and they\nhave to select one",
                    "type": "string"
                }
            }
        },
        "malak.UserRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/malak.Role"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.Workspace": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_subscription_active": {
                    "type": "boolean"
                },
                "logo_url": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.WorkspaceMetadata"
                },
                "plan": {
                    "$ref": "#/definitions/malak.Plan"
                },
                "plan_id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "stripe_customer_id": {
                    "description": "Not required\nDummy values work really if not using stripe",
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "workspace_name": {
                    "type": "string"
                }
            }
        },
        "malak.WorkspaceIntegration": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "integration": {
                    "$ref": "#/definitions/malak.Integration"
                },
                "integration_id": {
                    "type": "string"
                },
                "is_active": {
                    "description": "IsActive determines if the connection to the integration has been tested and works",
                    "type": "boolean"
                },
                "is_enabled": {
                    "description": "IsEnabled - this integration is enabled and data can be fetched",
                    "type": "boolean"
                },
                "reference": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.WorkspaceMetadata": {
            "type": "object"
        },
        "server.APIStatus": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "server.addContactToListRequest": {
            "type": "object",
            "properties": {
                "reference": {
                    "type": "string"
                }
            }
        },
        "server.authenticateUserRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "server.contentUpdateRequest": {
            "type": "object",
            "required": [
                "title",
                "update"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "update": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Block"
                    }
                }
            }
        },
        "server.createContactListRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "server.createContactRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "server.createDeckRequest": {
            "type": "object",
            "properties": {
                "deck_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "server.createUpdateContent": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "server.createWorkspaceRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "server.createdUpdateResponse": {
            "type": "object",
            "required": [
                "message",
                "update"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "update": {
                    "$ref": "#/definitions/malak.Update"
                }
            }
        },
        "server.createdUserResponse": {
            "type": "object",
            "required": [
                "message",
                "token",
                "user",
                "workspaces"
            ],
            "properties": {
                "current_workspace": {
                    "$ref": "#/definitions/malak.Workspace"
                },
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/malak.User"
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Workspace"
                    }
                }
            }
        },
        "server.editContactRequest": {
            "type": "object",
            "required": [
                "address",
                "company",
                "notes"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "server.fetchBillingPortalResponse": {
            "type": "object",
            "required": [
                "link",
                "message"
            ],
            "properties": {
                "link": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.fetchContactListResponse": {
            "type": "object",
            "required": [
                "list",
                "message"
            ],
            "properties": {
                "list": {
                    "$ref": "#/definitions/malak.ContactList"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.fetchContactListsResponse": {
            "type": "object",
            "required": [
                "lists",
                "message"
            ],
            "properties": {
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "list",
                            "mappings"
                        ],
                        "properties": {
                            "list": {
                                "$ref": "#/definitions/malak.ContactList"
                            },
                            "mappings": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/malak.ContactListMappingWithContact"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.fetchContactResponse": {
            "type": "object",
            "required": [
                "contact",
                "message"
            ],
            "properties": {
                "contact": {
                    "$ref": "#/definitions/malak.Contact"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.fetchDeckResponse": {
            "type": "object",
            "required": [
                "deck",
                "message"
            ],
            "properties": {
                "deck": {
                    "$ref": "#/definitions/malak.Deck"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.fetchDecksResponse": {
            "type": "object",
            "required": [
                "decks",
                "message"
            ],
            "properties": {
                "decks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Deck"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.fetchDetailedContactResponse": {
            "type": "object",
            "required": [
                "contact",
                "message",
                "shared_items"
            ],
            "properties": {
                "contact": {
                    "$ref": "#/definitions/malak.Contact"
                },
                "message": {
                    "type": "string"
                },
                "shared_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.ContactShareItem"
                    }
                }
            }
        },
        "server.fetchUpdateAnalyticsResponse": {
            "type": "object",
            "required": [
                "message",
                "recipients",
                "update"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.UpdateRecipient"
                    }
                },
                "update": {
                    "$ref": "#/definitions/malak.UpdateStat"
                }
            }
        },
        "server.fetchUpdateReponse": {
            "type": "object",
            "required": [
                "message",
                "update"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "update": {
                    "$ref": "#/definitions/malak.Update"
                }
            }
        },
        "server.fetchWorkspaceResponse": {
            "type": "object",
            "required": [
                "message",
                "workspace"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "workspace": {
                    "$ref": "#/definitions/malak.Workspace"
                }
            }
        },
        "server.listContactsResponse": {
            "type": "object",
            "required": [
                "contacts",
                "message",
                "meta"
            ],
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Contact"
                    }
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/server.meta"
                }
            }
        },
        "server.listIntegrationResponse": {
            "type": "object",
            "required": [
                "integrations",
                "message"
            ],
            "properties": {
                "integrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.WorkspaceIntegration"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.listUpdateResponse": {
            "type": "object",
            "required": [
                "message",
                "meta",
                "updates"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/server.meta"
                },
                "updates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Update"
                    }
                }
            }
        },
        "server.meta": {
            "type": "object",
            "required": [
                "paging"
            ],
            "properties": {
                "paging": {
                    "$ref": "#/definitions/server.pagingInfo"
                }
            }
        },
        "server.pagingInfo": {
            "type": "object",
            "required": [
                "page",
                "per_page",
                "total"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "server.preferenceResponse": {
            "type": "object",
            "required": [
                "message",
                "preferences"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "preferences": {
                    "$ref": "#/definitions/malak.Preference"
                }
            }
        },
        "server.previewUpdateRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "server.sendUpdateRequest": {
            "type": "object",
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "send_at": {
                    "type": "integer"
                }
            }
        },
        "server.testAPIIntegrationRequest": {
            "type": "object",
            "required": [
                "api_key"
            ],
            "properties": {
                "api_key": {
                    "type": "string"
                }
            }
        },
        "server.updateDeckPreferencesRequest": {
            "type": "object",
            "properties": {
                "enable_downloading": {
                    "type": "boolean"
                },
                "password_protection": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                },
                "require_email": {
                    "type": "boolean"
                }
            }
        },
        "server.updatePreferencesRequest": {
            "type": "object",
            "required": [
                "preferences"
            ],
            "properties": {
                "preferences": {
                    "type": "object",
                    "required": [
                        "billing",
                        "newsletter"
                    ],
                    "properties": {
                        "billing": {
                            "$ref": "#/definitions/malak.BillingPreferences"
                        },
                        "newsletter": {
                            "$ref": "#/definitions/malak.CommunicationPreferences"
                        }
                    }
                }
            }
        },
        "server.updateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "logo": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "workspace_name": {
                    "type": "string"
                }
            }
        },
        "server.uploadImageResponse": {
            "type": "object",
            "required": [
                "message",
                "url"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost:5300",
	BasePath:         "/v1",
	Schemes:          []string{"http"},
	Title:            "Malak's API documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
