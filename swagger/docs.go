// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Ayinke Ventures",
            "email": "lanre@ayinke.ventures"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/connect/{provider}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in with a social login provider",
                "parameters": [
                    {
                        "description": "auth exchange data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.authenticateUserRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "oauth2 provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/contacts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Creates a new contact",
                "parameters": [
                    {
                        "description": "contact request body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/images/upload": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload an image",
                "operationId": "uploadImage",
                "parameters": [
                    {
                        "type": "file",
                        "description": "image body",
                        "name": "image_body",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.uploadImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Fetch current user. This api should also double as a token validation api",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Create a new workspace",
                "parameters": [
                    {
                        "description": "request body to create a workspace",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchWorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "List updates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to query data from. Defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number to items to return. Defaults to 10 items",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter results by the status of the update.",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.listUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Create a new update",
                "parameters": [
                    {
                        "description": "update content body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.createUpdateContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Fetch a specific update",
                "operationId": "fetchUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchUpdateReponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Update a specific update",
                "operationId": "updateContent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update content body",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.contentUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Delete a specific update",
                "operationId": "deleteUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}/duplicate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Duplicate a specific update",
                "operationId": "duplicateUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}/pin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Toggle pinned status a specific update",
                "operationId": "toggleUpdatePin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.createdUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/updates/{reference}/preview": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Send preview of an update",
                "operationId": "previewUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body to create a workspace",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.previewUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/workspaces/{reference}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Switch current workspace",
                "operationId": "switchworkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace unique reference.. e.g update_",
                        "name": "reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.fetchWorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "malak.BlockContent": {
            "type": "object",
            "required": [
                "children",
                "content",
                "id",
                "props",
                "type"
            ],
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.BlockNoteItem"
                    }
                },
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.BlockNoteItem"
                    }
                },
                "id": {
                    "type": "string"
                },
                "props": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "malak.BlockNoteItem": {
            "type": "object",
            "required": [
                "styles",
                "text",
                "type"
            ],
            "properties": {
                "styles": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "malak.Contact": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "description": "User who added/created this contact",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.CustomContactMetadata"
                },
                "notes": {
                    "type": "string"
                },
                "owner_id": {
                    "description": "User who owns the contact.\nDoes not mean who added the contact but who chases\nor follows up officially with the contact",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.CustomContactMetadata": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "malak.PlanMetadata": {
            "type": "object",
            "properties": {
                "team": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "size": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "malak.Role": {
            "type": "string",
            "enum": [
                "admin",
                "member",
                "billing",
                "investor",
                "guest"
            ],
            "x-enum-varnames": [
                "RoleAdmin",
                "RoleMember",
                "RoleBilling",
                "RoleInvestor",
                "RoleGuest"
            ]
        },
        "malak.Update": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.BlockContent"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_pinned": {
                    "description": "If this update is pinned",
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.UpdateMetadata"
                },
                "reference": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string"
                },
                "sent_by": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/malak.UpdateStatus"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.UpdateMetadata": {
            "type": "object"
        },
        "malak.UpdateStatus": {
            "type": "string",
            "enum": [
                "draft",
                "sent"
            ],
            "x-enum-varnames": [
                "UpdateStatusDraft",
                "UpdateStatusSent"
            ]
        },
        "malak.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.UserMetadata"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.UserRole"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "malak.UserMetadata": {
            "type": "object",
            "properties": {
                "current_workspace": {
                    "description": "Used to keep track of the last used workspace\nIn the instance of multiple workspaces\nSo when next the user logs in, we remember and take them to the\nright place rather than always a list of all their workspaces and they\nhave to select one",
                    "type": "string"
                }
            }
        },
        "malak.UserRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/malak.Role"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "malak.Workspace": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/malak.PlanMetadata"
                },
                "plan_id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "stripe_customer_id": {
                    "description": "Not required\nDummy values work really",
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_name": {
                    "type": "string"
                }
            }
        },
        "server.APIStatus": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "server.authenticateUserRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "server.contentUpdateRequest": {
            "type": "object",
            "required": [
                "title",
                "update"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "update": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.BlockContent"
                    }
                }
            }
        },
        "server.createContactRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "server.createUpdateContent": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "server.createWorkspaceRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "server.createdUpdateResponse": {
            "type": "object",
            "required": [
                "message",
                "update"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "update": {
                    "$ref": "#/definitions/malak.Update"
                }
            }
        },
        "server.createdUserResponse": {
            "type": "object",
            "required": [
                "message",
                "token",
                "user",
                "workspaces"
            ],
            "properties": {
                "current_workspace": {
                    "$ref": "#/definitions/malak.Workspace"
                },
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/malak.User"
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Workspace"
                    }
                }
            }
        },
        "server.fetchContactResponse": {
            "type": "object",
            "required": [
                "contact",
                "message"
            ],
            "properties": {
                "contact": {
                    "$ref": "#/definitions/malak.Contact"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.fetchUpdateReponse": {
            "type": "object",
            "required": [
                "message",
                "update"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "update": {
                    "$ref": "#/definitions/malak.Update"
                }
            }
        },
        "server.fetchWorkspaceResponse": {
            "type": "object",
            "required": [
                "message",
                "workspace"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "workspace": {
                    "$ref": "#/definitions/malak.Workspace"
                }
            }
        },
        "server.listUpdateResponse": {
            "type": "object",
            "required": [
                "message",
                "meta",
                "updates"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/server.meta"
                },
                "updates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/malak.Update"
                    }
                }
            }
        },
        "server.meta": {
            "type": "object",
            "required": [
                "paging"
            ],
            "properties": {
                "paging": {
                    "$ref": "#/definitions/server.pagingInfo"
                }
            }
        },
        "server.pagingInfo": {
            "type": "object",
            "required": [
                "page",
                "per_page",
                "total"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "server.previewUpdateRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "server.uploadImageResponse": {
            "type": "object",
            "required": [
                "message",
                "url"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost:5300",
	BasePath:         "/v1",
	Schemes:          []string{"http"},
	Title:            "Malak's API documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
