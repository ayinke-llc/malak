// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package malak

import (
	"errors"
	"fmt"
)

const (
	// IntegrationSyncCheckpointStatusFailed is a IntegrationSyncCheckpointStatus of type failed.
	IntegrationSyncCheckpointStatusFailed IntegrationSyncCheckpointStatus = "failed"
	// IntegrationSyncCheckpointStatusPending is a IntegrationSyncCheckpointStatus of type pending.
	IntegrationSyncCheckpointStatusPending IntegrationSyncCheckpointStatus = "pending"
	// IntegrationSyncCheckpointStatusSuccess is a IntegrationSyncCheckpointStatus of type success.
	IntegrationSyncCheckpointStatusSuccess IntegrationSyncCheckpointStatus = "success"
)

var ErrInvalidIntegrationSyncCheckpointStatus = errors.New("not a valid IntegrationSyncCheckpointStatus")

// String implements the Stringer interface.
func (x IntegrationSyncCheckpointStatus) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x IntegrationSyncCheckpointStatus) IsValid() bool {
	_, err := ParseIntegrationSyncCheckpointStatus(string(x))
	return err == nil
}

var _IntegrationSyncCheckpointStatusValue = map[string]IntegrationSyncCheckpointStatus{
	"failed":  IntegrationSyncCheckpointStatusFailed,
	"pending": IntegrationSyncCheckpointStatusPending,
	"success": IntegrationSyncCheckpointStatusSuccess,
}

// ParseIntegrationSyncCheckpointStatus attempts to convert a string to a IntegrationSyncCheckpointStatus.
func ParseIntegrationSyncCheckpointStatus(name string) (IntegrationSyncCheckpointStatus, error) {
	if x, ok := _IntegrationSyncCheckpointStatusValue[name]; ok {
		return x, nil
	}
	return IntegrationSyncCheckpointStatus(""), fmt.Errorf("%s is %w", name, ErrInvalidIntegrationSyncCheckpointStatus)
}
