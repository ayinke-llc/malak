// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package malak

import (
	"errors"
	"fmt"
)

const (
	// DashboardLinkTypeDefault is a DashboardLinkType of type Default.
	DashboardLinkTypeDefault DashboardLinkType = iota
	// DashboardLinkTypeContact is a DashboardLinkType of type Contact.
	DashboardLinkTypeContact
)

var ErrInvalidDashboardLinkType = errors.New("not a valid DashboardLinkType")

const _DashboardLinkTypeName = "defaultcontact"

var _DashboardLinkTypeMap = map[DashboardLinkType]string{
	DashboardLinkTypeDefault: _DashboardLinkTypeName[0:7],
	DashboardLinkTypeContact: _DashboardLinkTypeName[7:14],
}

// String implements the Stringer interface.
func (x DashboardLinkType) String() string {
	if str, ok := _DashboardLinkTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("DashboardLinkType(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x DashboardLinkType) IsValid() bool {
	_, ok := _DashboardLinkTypeMap[x]
	return ok
}

var _DashboardLinkTypeValue = map[string]DashboardLinkType{
	_DashboardLinkTypeName[0:7]:  DashboardLinkTypeDefault,
	_DashboardLinkTypeName[7:14]: DashboardLinkTypeContact,
}

// ParseDashboardLinkType attempts to convert a string to a DashboardLinkType.
func ParseDashboardLinkType(name string) (DashboardLinkType, error) {
	if x, ok := _DashboardLinkTypeValue[name]; ok {
		return x, nil
	}
	return DashboardLinkType(0), fmt.Errorf("%s is %w", name, ErrInvalidDashboardLinkType)
}
