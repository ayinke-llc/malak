// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package malak

import (
	"errors"
	"fmt"
)

const (
	// IntegrationTypeMalak is a IntegrationType of type malak.
	IntegrationTypeMalak IntegrationType = "malak"
	// IntegrationTypeOauth2 is a IntegrationType of type oauth2.
	IntegrationTypeOauth2 IntegrationType = "oauth2"
	// IntegrationTypeApiKey is a IntegrationType of type api_key.
	IntegrationTypeApiKey IntegrationType = "api_key"
)

var ErrInvalidIntegrationType = errors.New("not a valid IntegrationType")

// String implements the Stringer interface.
func (x IntegrationType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x IntegrationType) IsValid() bool {
	_, err := ParseIntegrationType(string(x))
	return err == nil
}

var _IntegrationTypeValue = map[string]IntegrationType{
	"malak":   IntegrationTypeMalak,
	"oauth2":  IntegrationTypeOauth2,
	"api_key": IntegrationTypeApiKey,
}

// ParseIntegrationType attempts to convert a string to a IntegrationType.
func ParseIntegrationType(name string) (IntegrationType, error) {
	if x, ok := _IntegrationTypeValue[name]; ok {
		return x, nil
	}
	return IntegrationType(""), fmt.Errorf("%s is %w", name, ErrInvalidIntegrationType)
}
