// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package malak

import (
	"errors"
	"fmt"
)

const (
	// EntityTypeWorkspace is a EntityType of type workspace.
	EntityTypeWorkspace EntityType = "workspace"
	// EntityTypeInvoice is a EntityType of type invoice.
	EntityTypeInvoice EntityType = "invoice"
	// EntityTypeTeam is a EntityType of type team.
	EntityTypeTeam EntityType = "team"
	// EntityTypeInvite is a EntityType of type invite.
	EntityTypeInvite EntityType = "invite"
	// EntityTypeContact is a EntityType of type contact.
	EntityTypeContact EntityType = "contact"
	// EntityTypeUpdate is a EntityType of type update.
	EntityTypeUpdate EntityType = "update"
	// EntityTypeLink is a EntityType of type link.
	EntityTypeLink EntityType = "link"
	// EntityTypeRoom is a EntityType of type room.
	EntityTypeRoom EntityType = "room"
	// EntityTypeRecipient is a EntityType of type recipient.
	EntityTypeRecipient EntityType = "recipient"
	// EntityTypeSchedule is a EntityType of type schedule.
	EntityTypeSchedule EntityType = "schedule"
	// EntityTypeList is a EntityType of type list.
	EntityTypeList EntityType = "list"
	// EntityTypeListEmail is a EntityType of type list_email.
	EntityTypeListEmail EntityType = "list_email"
	// EntityTypeUpdateStat is a EntityType of type update_stat.
	EntityTypeUpdateStat EntityType = "update_stat"
	// EntityTypeRecipientStat is a EntityType of type recipient_stat.
	EntityTypeRecipientStat EntityType = "recipient_stat"
	// EntityTypeRecipientLog is a EntityType of type recipient_log.
	EntityTypeRecipientLog EntityType = "recipient_log"
	// EntityTypeDeck is a EntityType of type deck.
	EntityTypeDeck EntityType = "deck"
	// EntityTypeDeckPreference is a EntityType of type deck_preference.
	EntityTypeDeckPreference EntityType = "deck_preference"
	// EntityTypeContactShare is a EntityType of type contact_share.
	EntityTypeContactShare EntityType = "contact_share"
	// EntityTypeDashboard is a EntityType of type dashboard.
	EntityTypeDashboard EntityType = "dashboard"
	// EntityTypePlan is a EntityType of type plan.
	EntityTypePlan EntityType = "plan"
	// EntityTypePrice is a EntityType of type price.
	EntityTypePrice EntityType = "price"
	// EntityTypeIntegration is a EntityType of type integration.
	EntityTypeIntegration EntityType = "integration"
	// EntityTypeWorkspaceIntegration is a EntityType of type workspace_integration.
	EntityTypeWorkspaceIntegration EntityType = "workspace_integration"
	// EntityTypeIntegrationDatapoint is a EntityType of type integration_datapoint.
	EntityTypeIntegrationDatapoint EntityType = "integration_datapoint"
	// EntityTypeIntegrationChart is a EntityType of type integration_chart.
	EntityTypeIntegrationChart EntityType = "integration_chart"
	// EntityTypeIntegrationSyncCheckpoint is a EntityType of type integration_sync_checkpoint.
	EntityTypeIntegrationSyncCheckpoint EntityType = "integration_sync_checkpoint"
	// EntityTypeDashboardChart is a EntityType of type dashboard_chart.
	EntityTypeDashboardChart EntityType = "dashboard_chart"
	// EntityTypeSystemTemplate is a EntityType of type system_template.
	EntityTypeSystemTemplate EntityType = "system_template"
	// EntityTypeDeckDailyEngagement is a EntityType of type deck_daily_engagement.
	EntityTypeDeckDailyEngagement EntityType = "deck_daily_engagement"
	// EntityTypeDeckAnalytic is a EntityType of type deck_analytic.
	EntityTypeDeckAnalytic EntityType = "deck_analytic"
	// EntityTypeDeckViewerSession is a EntityType of type deck_viewer_session.
	EntityTypeDeckViewerSession EntityType = "deck_viewer_session"
	// EntityTypeDeckGeographicStat is a EntityType of type deck_geographic_stat.
	EntityTypeDeckGeographicStat EntityType = "deck_geographic_stat"
	// EntityTypeSession is a EntityType of type session.
	EntityTypeSession EntityType = "session"
	// EntityTypeDashboardLink is a EntityType of type dashboard_link.
	EntityTypeDashboardLink EntityType = "dashboard_link"
	// EntityTypeDashboardLinkAccessLog is a EntityType of type dashboard_link_access_log.
	EntityTypeDashboardLinkAccessLog EntityType = "dashboard_link_access_log"
	// EntityTypeApiKey is a EntityType of type api_key.
	EntityTypeApiKey EntityType = "api_key"
	// EntityTypeFundraisingPipeline is a EntityType of type fundraising_pipeline.
	EntityTypeFundraisingPipeline EntityType = "fundraising_pipeline"
	// EntityTypeFundraisingPipelineColumn is a EntityType of type fundraising_pipeline_column.
	EntityTypeFundraisingPipelineColumn EntityType = "fundraising_pipeline_column"
	// EntityTypeFundraisingPipelineColumnContactDocument is a EntityType of type fundraising_pipeline_column_contact_document.
	EntityTypeFundraisingPipelineColumnContactDocument EntityType = "fundraising_pipeline_column_contact_document"
	// EntityTypeFundraisingPipelineColumnContact is a EntityType of type fundraising_pipeline_column_contact.
	EntityTypeFundraisingPipelineColumnContact EntityType = "fundraising_pipeline_column_contact"
	// EntityTypeFundraisingPipelineColumnContactActivity is a EntityType of type fundraising_pipeline_column_contact_activity.
	EntityTypeFundraisingPipelineColumnContactActivity EntityType = "fundraising_pipeline_column_contact_activity"
	// EntityTypeFundraisingPipelineColumnContactDeal is a EntityType of type fundraising_pipeline_column_contact_deal.
	EntityTypeFundraisingPipelineColumnContactDeal EntityType = "fundraising_pipeline_column_contact_deal"
	// EntityTypeFundraisingPipelineColumnContactPosition is a EntityType of type fundraising_pipeline_column_contact_position.
	EntityTypeFundraisingPipelineColumnContactPosition EntityType = "fundraising_pipeline_column_contact_position"
)

var ErrInvalidEntityType = errors.New("not a valid EntityType")

// String implements the Stringer interface.
func (x EntityType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x EntityType) IsValid() bool {
	_, err := ParseEntityType(string(x))
	return err == nil
}

var _EntityTypeValue = map[string]EntityType{
	"workspace":                   EntityTypeWorkspace,
	"invoice":                     EntityTypeInvoice,
	"team":                        EntityTypeTeam,
	"invite":                      EntityTypeInvite,
	"contact":                     EntityTypeContact,
	"update":                      EntityTypeUpdate,
	"link":                        EntityTypeLink,
	"room":                        EntityTypeRoom,
	"recipient":                   EntityTypeRecipient,
	"schedule":                    EntityTypeSchedule,
	"list":                        EntityTypeList,
	"list_email":                  EntityTypeListEmail,
	"update_stat":                 EntityTypeUpdateStat,
	"recipient_stat":              EntityTypeRecipientStat,
	"recipient_log":               EntityTypeRecipientLog,
	"deck":                        EntityTypeDeck,
	"deck_preference":             EntityTypeDeckPreference,
	"contact_share":               EntityTypeContactShare,
	"dashboard":                   EntityTypeDashboard,
	"plan":                        EntityTypePlan,
	"price":                       EntityTypePrice,
	"integration":                 EntityTypeIntegration,
	"workspace_integration":       EntityTypeWorkspaceIntegration,
	"integration_datapoint":       EntityTypeIntegrationDatapoint,
	"integration_chart":           EntityTypeIntegrationChart,
	"integration_sync_checkpoint": EntityTypeIntegrationSyncCheckpoint,
	"dashboard_chart":             EntityTypeDashboardChart,
	"system_template":             EntityTypeSystemTemplate,
	"deck_daily_engagement":       EntityTypeDeckDailyEngagement,
	"deck_analytic":               EntityTypeDeckAnalytic,
	"deck_viewer_session":         EntityTypeDeckViewerSession,
	"deck_geographic_stat":        EntityTypeDeckGeographicStat,
	"session":                     EntityTypeSession,
	"dashboard_link":              EntityTypeDashboardLink,
	"dashboard_link_access_log":   EntityTypeDashboardLinkAccessLog,
	"api_key":                     EntityTypeApiKey,
	"fundraising_pipeline":        EntityTypeFundraisingPipeline,
	"fundraising_pipeline_column": EntityTypeFundraisingPipelineColumn,
	"fundraising_pipeline_column_contact_document": EntityTypeFundraisingPipelineColumnContactDocument,
	"fundraising_pipeline_column_contact":          EntityTypeFundraisingPipelineColumnContact,
	"fundraising_pipeline_column_contact_activity": EntityTypeFundraisingPipelineColumnContactActivity,
	"fundraising_pipeline_column_contact_deal":     EntityTypeFundraisingPipelineColumnContactDeal,
	"fundraising_pipeline_column_contact_position": EntityTypeFundraisingPipelineColumnContactPosition,
}

// ParseEntityType attempts to convert a string to a EntityType.
func ParseEntityType(name string) (EntityType, error) {
	if x, ok := _EntityTypeValue[name]; ok {
		return x, nil
	}
	return EntityType(""), fmt.Errorf("%s is %w", name, ErrInvalidEntityType)
}
