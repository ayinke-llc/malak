// Code generated by MockGen. DO NOT EDIT.
// Source: template.go
//
// Generated by this command:
//
//	mockgen -source=template.go -destination=mocks/template.go -package=malak_mocks
//

// Package malak_mocks is a generated GoMock package.
package malak_mocks

import (
	context "context"
	reflect "reflect"

	malak "github.com/ayinke-llc/malak"
	gomock "go.uber.org/mock/gomock"
)

// MockTemplateRepository is a mock of TemplateRepository interface.
type MockTemplateRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateRepositoryMockRecorder
	isgomock struct{}
}

// MockTemplateRepositoryMockRecorder is the mock recorder for MockTemplateRepository.
type MockTemplateRepositoryMockRecorder struct {
	mock *MockTemplateRepository
}

// NewMockTemplateRepository creates a new mock instance.
func NewMockTemplateRepository(ctrl *gomock.Controller) *MockTemplateRepository {
	mock := &MockTemplateRepository{ctrl: ctrl}
	mock.recorder = &MockTemplateRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTemplateRepository) EXPECT() *MockTemplateRepositoryMockRecorder {
	return m.recorder
}

// System mocks base method.
func (m *MockTemplateRepository) System(arg0 context.Context) ([]malak.SystemTemplate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "System", arg0)
	ret0, _ := ret[0].([]malak.SystemTemplate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// System indicates an expected call of System.
func (mr *MockTemplateRepositoryMockRecorder) System(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "System", reflect.TypeOf((*MockTemplateRepository)(nil).System), arg0)
}
