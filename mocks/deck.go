// Code generated by MockGen. DO NOT EDIT.
// Source: deck.go
//
// Generated by this command:
//
//	mockgen -source=deck.go -destination=mocks/deck.go -package=malak_mocks
//

// Package malak_mocks is a generated GoMock package.
package malak_mocks

import (
	context "context"
	reflect "reflect"

	malak "github.com/ayinke-llc/malak"
	gomock "go.uber.org/mock/gomock"
)

// MockDeckRepository is a mock of DeckRepository interface.
type MockDeckRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDeckRepositoryMockRecorder
	isgomock struct{}
}

// MockDeckRepositoryMockRecorder is the mock recorder for MockDeckRepository.
type MockDeckRepositoryMockRecorder struct {
	mock *MockDeckRepository
}

// NewMockDeckRepository creates a new mock instance.
func NewMockDeckRepository(ctrl *gomock.Controller) *MockDeckRepository {
	mock := &MockDeckRepository{ctrl: ctrl}
	mock.recorder = &MockDeckRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeckRepository) EXPECT() *MockDeckRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDeckRepository) Create(arg0 context.Context, arg1 *malak.Deck, arg2 *malak.DeckPreference) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDeckRepositoryMockRecorder) Create(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDeckRepository)(nil).Create), arg0, arg1, arg2)
}
