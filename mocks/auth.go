// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go
//
// Generated by this command:
//
//	mockgen -source=auth.go -destination=mocks/auth.go -package=malak_mocks
//

// Package malak_mocks is a generated GoMock package.
package malak_mocks

import (
	context "context"
	reflect "reflect"

	malak "github.com/ayinke-llc/malak"
	gomock "go.uber.org/mock/gomock"
)

// MockEmailVerificationRepository is a mock of EmailVerificationRepository interface.
type MockEmailVerificationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockEmailVerificationRepositoryMockRecorder
	isgomock struct{}
}

// MockEmailVerificationRepositoryMockRecorder is the mock recorder for MockEmailVerificationRepository.
type MockEmailVerificationRepositoryMockRecorder struct {
	mock *MockEmailVerificationRepository
}

// NewMockEmailVerificationRepository creates a new mock instance.
func NewMockEmailVerificationRepository(ctrl *gomock.Controller) *MockEmailVerificationRepository {
	mock := &MockEmailVerificationRepository{ctrl: ctrl}
	mock.recorder = &MockEmailVerificationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmailVerificationRepository) EXPECT() *MockEmailVerificationRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockEmailVerificationRepository) Create(arg0 context.Context, arg1 *malak.EmailVerification) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockEmailVerificationRepositoryMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockEmailVerificationRepository)(nil).Create), arg0, arg1)
}
