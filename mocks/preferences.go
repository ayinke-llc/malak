// Code generated by MockGen. DO NOT EDIT.
// Source: preferences.go
//
// Generated by this command:
//
//	mockgen -source=preferences.go -destination=mocks/preferences.go -package=malak_mocks
//

// Package malak_mocks is a generated GoMock package.
package malak_mocks

import (
	context "context"
	reflect "reflect"

	malak "github.com/ayinke-llc/malak"
	gomock "go.uber.org/mock/gomock"
)

// MockPreferenceRepository is a mock of PreferenceRepository interface.
type MockPreferenceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPreferenceRepositoryMockRecorder
	isgomock struct{}
}

// MockPreferenceRepositoryMockRecorder is the mock recorder for MockPreferenceRepository.
type MockPreferenceRepositoryMockRecorder struct {
	mock *MockPreferenceRepository
}

// NewMockPreferenceRepository creates a new mock instance.
func NewMockPreferenceRepository(ctrl *gomock.Controller) *MockPreferenceRepository {
	mock := &MockPreferenceRepository{ctrl: ctrl}
	mock.recorder = &MockPreferenceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPreferenceRepository) EXPECT() *MockPreferenceRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockPreferenceRepository) Get(arg0 context.Context, arg1 *malak.Workspace) (*malak.Preference, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*malak.Preference)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockPreferenceRepositoryMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPreferenceRepository)(nil).Get), arg0, arg1)
}

// Update mocks base method.
func (m *MockPreferenceRepository) Update(arg0 context.Context, arg1 *malak.Preference) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockPreferenceRepositoryMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockPreferenceRepository)(nil).Update), arg0, arg1)
}
