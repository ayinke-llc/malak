// Code generated by MockGen. DO NOT EDIT.
// Source: dashboard_link.go
//
// Generated by this command:
//
//	mockgen -source=dashboard_link.go -destination=mocks/dashboard_link.go -package=malak_mocks
//

// Package malak_mocks is a generated GoMock package.
package malak_mocks

import (
	context "context"
	reflect "reflect"

	malak "github.com/ayinke-llc/malak"
	gomock "go.uber.org/mock/gomock"
)

// MockDashboardLinkRepository is a mock of DashboardLinkRepository interface.
type MockDashboardLinkRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDashboardLinkRepositoryMockRecorder
	isgomock struct{}
}

// MockDashboardLinkRepositoryMockRecorder is the mock recorder for MockDashboardLinkRepository.
type MockDashboardLinkRepositoryMockRecorder struct {
	mock *MockDashboardLinkRepository
}

// NewMockDashboardLinkRepository creates a new mock instance.
func NewMockDashboardLinkRepository(ctrl *gomock.Controller) *MockDashboardLinkRepository {
	mock := &MockDashboardLinkRepository{ctrl: ctrl}
	mock.recorder = &MockDashboardLinkRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDashboardLinkRepository) EXPECT() *MockDashboardLinkRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDashboardLinkRepository) Create(arg0 context.Context, arg1 *malak.CreateDashboardLinkOptions) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDashboardLinkRepositoryMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDashboardLinkRepository)(nil).Create), arg0, arg1)
}

// DefaultLink mocks base method.
func (m *MockDashboardLinkRepository) DefaultLink(arg0 context.Context, arg1 *malak.Dashboard) (malak.DashboardLink, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DefaultLink", arg0, arg1)
	ret0, _ := ret[0].(malak.DashboardLink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DefaultLink indicates an expected call of DefaultLink.
func (mr *MockDashboardLinkRepositoryMockRecorder) DefaultLink(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DefaultLink", reflect.TypeOf((*MockDashboardLinkRepository)(nil).DefaultLink), arg0, arg1)
}

// List mocks base method.
func (m *MockDashboardLinkRepository) List(arg0 context.Context, arg1 malak.ListAccessControlOptions) ([]malak.DashboardLink, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].([]malak.DashboardLink)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// List indicates an expected call of List.
func (mr *MockDashboardLinkRepositoryMockRecorder) List(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockDashboardLinkRepository)(nil).List), arg0, arg1)
}

// PublicDetails mocks base method.
func (m *MockDashboardLinkRepository) PublicDetails(arg0 context.Context, arg1 malak.Reference) (malak.Dashboard, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublicDetails", arg0, arg1)
	ret0, _ := ret[0].(malak.Dashboard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PublicDetails indicates an expected call of PublicDetails.
func (mr *MockDashboardLinkRepositoryMockRecorder) PublicDetails(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublicDetails", reflect.TypeOf((*MockDashboardLinkRepository)(nil).PublicDetails), arg0, arg1)
}
