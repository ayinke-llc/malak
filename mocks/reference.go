// Code generated by MockGen. DO NOT EDIT.
// Source: reference.go
//
// Generated by this command:
//
//	mockgen -source=reference.go -destination=mocks/reference.go -package=malak_mocks
//

// Package malak_mocks is a generated GoMock package.
package malak_mocks

import (
	reflect "reflect"

	malak "github.com/ayinke-llc/malak"
	gomock "go.uber.org/mock/gomock"
)

// MockReferenceGeneratorOperation is a mock of ReferenceGeneratorOperation interface.
type MockReferenceGeneratorOperation struct {
	ctrl     *gomock.Controller
	recorder *MockReferenceGeneratorOperationMockRecorder
	isgomock struct{}
}

// MockReferenceGeneratorOperationMockRecorder is the mock recorder for MockReferenceGeneratorOperation.
type MockReferenceGeneratorOperationMockRecorder struct {
	mock *MockReferenceGeneratorOperation
}

// NewMockReferenceGeneratorOperation creates a new mock instance.
func NewMockReferenceGeneratorOperation(ctrl *gomock.Controller) *MockReferenceGeneratorOperation {
	mock := &MockReferenceGeneratorOperation{ctrl: ctrl}
	mock.recorder = &MockReferenceGeneratorOperationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReferenceGeneratorOperation) EXPECT() *MockReferenceGeneratorOperationMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockReferenceGeneratorOperation) Generate(arg0 malak.EntityType) malak.Reference {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", arg0)
	ret0, _ := ret[0].(malak.Reference)
	return ret0
}

// Generate indicates an expected call of Generate.
func (mr *MockReferenceGeneratorOperationMockRecorder) Generate(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockReferenceGeneratorOperation)(nil).Generate), arg0)
}

// ShortLink mocks base method.
func (m *MockReferenceGeneratorOperation) ShortLink() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortLink")
	ret0, _ := ret[0].(string)
	return ret0
}

// ShortLink indicates an expected call of ShortLink.
func (mr *MockReferenceGeneratorOperationMockRecorder) ShortLink() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortLink", reflect.TypeOf((*MockReferenceGeneratorOperation)(nil).ShortLink))
}
