// Code generated by MockGen. DO NOT EDIT.
// Source: uuid.go
//
// Generated by this command:
//
//	mockgen -source=uuid.go -destination=mocks/uuid.go -package=malak_mocks
//

// Package malak_mocks is a generated GoMock package.
package malak_mocks

import (
	reflect "reflect"

	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockUuidGenerator is a mock of UuidGenerator interface.
type MockUuidGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockUuidGeneratorMockRecorder
	isgomock struct{}
}

// MockUuidGeneratorMockRecorder is the mock recorder for MockUuidGenerator.
type MockUuidGeneratorMockRecorder struct {
	mock *MockUuidGenerator
}

// NewMockUuidGenerator creates a new mock instance.
func NewMockUuidGenerator(ctrl *gomock.Controller) *MockUuidGenerator {
	mock := &MockUuidGenerator{ctrl: ctrl}
	mock.recorder = &MockUuidGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUuidGenerator) EXPECT() *MockUuidGeneratorMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUuidGenerator) Create() uuid.UUID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create")
	ret0, _ := ret[0].(uuid.UUID)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUuidGeneratorMockRecorder) Create() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUuidGenerator)(nil).Create))
}
