// Code generated by MockGen. DO NOT EDIT.
// Source: dashboard.go
//
// Generated by this command:
//
//	mockgen -source=dashboard.go -destination=mocks/dashboard.go -package=malak_mocks
//

// Package malak_mocks is a generated GoMock package.
package malak_mocks

import (
	context "context"
	reflect "reflect"

	malak "github.com/ayinke-llc/malak"
	gomock "go.uber.org/mock/gomock"
)

// MockDashboardRepository is a mock of DashboardRepository interface.
type MockDashboardRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDashboardRepositoryMockRecorder
	isgomock struct{}
}

// MockDashboardRepositoryMockRecorder is the mock recorder for MockDashboardRepository.
type MockDashboardRepositoryMockRecorder struct {
	mock *MockDashboardRepository
}

// NewMockDashboardRepository creates a new mock instance.
func NewMockDashboardRepository(ctrl *gomock.Controller) *MockDashboardRepository {
	mock := &MockDashboardRepository{ctrl: ctrl}
	mock.recorder = &MockDashboardRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDashboardRepository) EXPECT() *MockDashboardRepositoryMockRecorder {
	return m.recorder
}

// AddChart mocks base method.
func (m *MockDashboardRepository) AddChart(arg0 context.Context, arg1 *malak.DashboardChart) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddChart", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddChart indicates an expected call of AddChart.
func (mr *MockDashboardRepositoryMockRecorder) AddChart(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddChart", reflect.TypeOf((*MockDashboardRepository)(nil).AddChart), arg0, arg1)
}

// Create mocks base method.
func (m *MockDashboardRepository) Create(arg0 context.Context, arg1 *malak.Dashboard) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDashboardRepositoryMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDashboardRepository)(nil).Create), arg0, arg1)
}
