basePath: /v1
definitions:
  malak.Contact:
    properties:
      city:
        type: string
      company:
        type: string
      created_at:
        type: string
      created_by:
        description: User who added/created this contact
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      metadata:
        $ref: '#/definitions/malak.CustomContactMetadata'
      notes:
        type: string
      owner_id:
        description: |-
          User who owns the contact.
          Does not mean who added the contact but who chases
          or follows up officially with the contact
        type: string
      phone:
        type: string
      reference:
        type: string
      updated_at:
        type: string
      workspace_id:
        type: string
    type: object
  malak.CustomContactMetadata:
    additionalProperties:
      type: string
    type: object
  malak.PlanMetadata:
    properties:
      team:
        properties:
          enabled:
            type: boolean
          size:
            type: integer
        type: object
    type: object
  malak.Role:
    enum:
    - admin
    - member
    - billing
    - investor
    - guest
    type: string
    x-enum-varnames:
    - RoleAdmin
    - RoleMember
    - RoleBilling
    - RoleInvestor
    - RoleGuest
  malak.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/malak.UserMetadata'
      roles:
        items:
          $ref: '#/definitions/malak.UserRole'
        type: array
      updated_at:
        type: string
    type: object
  malak.UserMetadata:
    properties:
      current_workspace:
        description: |-
          Used to keep track of the last used workspace
          In the instance of multiple workspaces
          So when next the user logs in, we remember and take them to the
          right place rather than always a list of all their workspaces and they
          have to select one
        type: string
    type: object
  malak.UserRole:
    properties:
      created_at:
        type: string
      id:
        type: string
      role:
        $ref: '#/definitions/malak.Role'
      updated_at:
        type: string
      user_id:
        type: string
      workspace_id:
        type: string
    type: object
  malak.Workspace:
    properties:
      created_at:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/malak.PlanMetadata'
      plan_id:
        type: string
      reference:
        type: string
      stripe_customer_id:
        description: |-
          Not required
          Dummy values work really
        type: string
      subscription_id:
        type: string
      updated_at:
        type: string
      workspace_name:
        type: string
    type: object
  server.APIStatus:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  server.authenticateUserRequest:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  server.createContactRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  server.createWorkspaceRequest:
    properties:
      name:
        type: string
    type: object
  server.createdUserResponse:
    properties:
      message:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/malak.User'
      workspace:
        $ref: '#/definitions/malak.Workspace'
    required:
    - message
    - token
    - user
    type: object
  server.fetchContactResponse:
    properties:
      contact:
        $ref: '#/definitions/malak.Contact'
      message:
        type: string
    required:
    - contact
    - message
    type: object
  server.fetchWorkspaceResponse:
    properties:
      message:
        type: string
      workspace:
        $ref: '#/definitions/malak.Workspace'
    required:
    - message
    - workspace
    type: object
host: localhost:5300
info:
  contact:
    email: lanre@ayinke.ventures
    name: Ayinke Ventures
  title: Malak's API documentation
  version: 0.1.0
paths:
  /auth/connect/{provider}:
    post:
      consumes:
      - application/json
      parameters:
      - description: auth exchange data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/server.authenticateUserRequest'
      - description: oauth2 provider
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.createdUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.APIStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIStatus'
      summary: Sign in with a social login provider
      tags:
      - auth
  /contacts:
    post:
      consumes:
      - application/json
      parameters:
      - description: contact request body
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/server.createContactRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.fetchContactResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.APIStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIStatus'
      summary: Creates a new contact
      tags:
      - contacts
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.createdUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.APIStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIStatus'
      summary: Fetch current user. This api should also double as a token validation
        api
      tags:
      - user
  /workspaces:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body to create a workspace
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/server.createWorkspaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.fetchWorkspaceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.APIStatus'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.APIStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.APIStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.APIStatus'
      summary: Create a new workspace
      tags:
      - workspace
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
