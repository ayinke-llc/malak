// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package queue

import (
	"errors"
	"fmt"
)

const (
	// QueueTopicBillingTrialEnding is a QueueTopic of type billing_trial_ending.
	QueueTopicBillingTrialEnding QueueTopic = "billing_trial_ending"
	// QueueTopicBillingCreateCustomer is a QueueTopic of type billing_create_customer.
	QueueTopicBillingCreateCustomer QueueTopic = "billing_create_customer"
	// QueueTopicInviteTeamMember is a QueueTopic of type invite_team_member.
	QueueTopicInviteTeamMember QueueTopic = "invite_team_member"
	// QueueTopicShareDashboard is a QueueTopic of type share_dashboard.
	QueueTopicShareDashboard QueueTopic = "share_dashboard"
	// QueueTopicSubscriptionExpired is a QueueTopic of type subscription_expired.
	QueueTopicSubscriptionExpired QueueTopic = "subscription_expired"
)

var ErrInvalidQueueTopic = errors.New("not a valid QueueTopic")

// String implements the Stringer interface.
func (x QueueTopic) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x QueueTopic) IsValid() bool {
	_, err := ParseQueueTopic(string(x))
	return err == nil
}

var _QueueTopicValue = map[string]QueueTopic{
	"billing_trial_ending":    QueueTopicBillingTrialEnding,
	"billing_create_customer": QueueTopicBillingCreateCustomer,
	"invite_team_member":      QueueTopicInviteTeamMember,
	"share_dashboard":         QueueTopicShareDashboard,
	"subscription_expired":    QueueTopicSubscriptionExpired,
}

// ParseQueueTopic attempts to convert a string to a QueueTopic.
func ParseQueueTopic(name string) (QueueTopic, error) {
	if x, ok := _QueueTopicValue[name]; ok {
		return x, nil
	}
	return QueueTopic(""), fmt.Errorf("%s is %w", name, ErrInvalidQueueTopic)
}
