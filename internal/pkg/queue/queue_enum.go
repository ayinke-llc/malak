// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package queue

import (
	"errors"
	"fmt"
)

const (
	// QueueEventSubscriptionMessageUpdatePreview is a QueueEventSubscriptionMessage of type update_preview.
	QueueEventSubscriptionMessageUpdatePreview QueueEventSubscriptionMessage = "update_preview"
)

var ErrInvalidQueueEventSubscriptionMessage = errors.New("not a valid QueueEventSubscriptionMessage")

// String implements the Stringer interface.
func (x QueueEventSubscriptionMessage) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x QueueEventSubscriptionMessage) IsValid() bool {
	_, err := ParseQueueEventSubscriptionMessage(string(x))
	return err == nil
}

var _QueueEventSubscriptionMessageValue = map[string]QueueEventSubscriptionMessage{
	"update_preview": QueueEventSubscriptionMessageUpdatePreview,
}

// ParseQueueEventSubscriptionMessage attempts to convert a string to a QueueEventSubscriptionMessage.
func ParseQueueEventSubscriptionMessage(name string) (QueueEventSubscriptionMessage, error) {
	if x, ok := _QueueEventSubscriptionMessageValue[name]; ok {
		return x, nil
	}
	return QueueEventSubscriptionMessage(""), fmt.Errorf("%s is %w", name, ErrInvalidQueueEventSubscriptionMessage)
}
